{"version":3,"sources":["components/Profile/profile.module.css","components/Statistics/statistical.module.css","components/FriendList/friendList.module.css","components/TransactionHistory/transactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","label","quantity","followers","views","likes","Statistics","title","statistics","stat_list","map","stat","item","key","id","percentage","FriendList","friends","friend_list","friend","isOnline","statusOnline","statusOffline","width","TransactionHistory","items","class","transaction_history","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","querySelector"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,KAAO,sBAAsB,MAAQ,uBAAuB,SAAW,4B,gBCApUD,EAAOC,QAAU,CAAC,WAAa,gCAAgC,MAAQ,2BAA2B,UAAY,+BAA+B,KAAO,0BAA0B,MAAQ,2BAA2B,WAAa,kC,gBCA9ND,EAAOC,QAAU,CAAC,YAAc,gCAAgC,KAAO,yBAAyB,aAAe,iCAAiC,cAAgB,kCAAkC,OAAS,2BAA2B,KAAO,2B,onCCA7OD,EAAOC,QAAU,CAAC,oBAAsB,kD,qmECyCzBC,EAtCC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKC,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,MAAhC,OACd,yBAAKC,UAAWC,IAAOC,SACrB,yBAAKF,UAAWC,IAAOE,aACrB,yBAAKC,IAAKN,EAAQO,IAAI,cAAcL,UAAWC,IAAOH,SACtD,uBAAGE,UAAWC,IAAON,MAAOA,GAC5B,uBAAGK,UAAWC,IAAOL,KAArB,IAA4BA,GAC5B,uBAAGI,UAAWC,IAAOJ,UAAWA,IAGlC,wBAAIG,UAAWC,IAAOF,OACpB,4BACE,0BAAMC,UAAWC,IAAOK,OAAxB,aACA,0BAAMN,UAAWC,IAAOM,UAAWR,EAAMS,YAE3C,4BACE,0BAAMR,UAAWC,IAAOK,OAAxB,SACA,0BAAMN,UAAWC,IAAOM,UAAWR,EAAMU,QAE3C,4BACE,0BAAMT,UAAWC,IAAOK,OAAxB,SACA,0BAAMN,UAAWC,IAAOM,UAAWR,EAAMW,W,uBCKlCC,EAzBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOb,EAAV,EAAUA,MAAV,OACjB,6BAASC,UAAWC,IAAOY,YACzB,wBAAIb,UAAWC,IAAOW,OAAQA,GAE9B,wBAAIZ,UAAWC,IAAOa,WACnBf,EAAMgB,KAAI,SAAAC,GAAI,OACb,wBAAIhB,UAAWC,IAAOgB,KAAMC,IAAKF,EAAKG,IACpC,0BAAMnB,UAAWC,IAAOK,OAAQU,EAAKV,OACrC,0BAAMN,UAAWC,IAAOmB,YAAaJ,EAAKI,WAA1C,Y,uBCkBKC,EA1BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,wBAAItB,UAAWC,IAAOsB,aACnBD,EAAQP,KAAI,SAAAS,GAAM,OACjB,wBAAIxB,UAAWC,IAAOgB,KAAMC,IAAKM,EAAOL,IACtC,0BACEnB,UACEwB,EAAOC,SAAWxB,IAAOyB,aAAezB,IAAO0B,gBAGnD,yBAAK3B,UAAWC,IAAOH,OAAQM,IAAKoB,EAAO1B,OAAQO,IAAI,GAAGuB,MAAM,OAChE,uBAAG5B,UAAWC,IAAON,MAAO6B,EAAO7B,Y,uBCuB5BkC,EAjCY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACzB,2BAAOC,MAAO9B,IAAO+B,qBACnB,+BACE,4BACE,oCACA,sCACA,0CAIJ,+BACGF,EAAMf,KAAI,SAAAE,GAAI,OACb,wBAAIC,IAAKD,EAAKE,IACZ,4BAAKF,EAAKgB,MACV,4BAAKhB,EAAKiB,QACV,4BAAKjB,EAAKkB,iB,QCMLC,EAfH,kBACV,oCACE,kBAAC,EAAD,CACEzC,KAAM0C,EAAK1C,KACXC,IAAKyC,EAAKzC,IACVC,SAAUwC,EAAKxC,SACfC,OAAQuC,EAAKvC,OACbC,MAAOsC,EAAKtC,QAEd,kBAAC,EAAD,CAAYa,MAAM,eAAeb,MAAOuC,IACxC,kBAAC,EAAD,CAAYhB,QAASA,IACrB,kBAAC,EAAD,CAAoBQ,MAAOS,MCjB/BC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.2e8a4d30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__DRR2M\",\"description\":\"profile_description__LXEba\",\"avatar\":\"profile_avatar__1pDTE\",\"name\":\"profile_name__oStm8\",\"tag\":\"profile_tag__2QlO6\",\"location\":\"profile_location__ffYut\",\"stats\":\"profile_stats__3s8Ae\",\"list\":\"profile_list__AKb4c\",\"label\":\"profile_label__CkVuj\",\"quantity\":\"profile_quantity__1wtXw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistical_statistics__2SbBw\",\"title\":\"statistical_title__2FbSg\",\"stat_list\":\"statistical_stat_list__3Q9u_\",\"item\":\"statistical_item__fGH0u\",\"label\":\"statistical_label__3DApS\",\"percentage\":\"statistical_percentage__2f4qU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"friendList_friend_list__17FGh\",\"item\":\"friendList_item__3tdZx\",\"statusOnline\":\"friendList_statusOnline__2PHeC\",\"statusOffline\":\"friendList_statusOffline__3jTMA\",\"avatar\":\"friendList_avatar__2Z1hx\",\"name\":\"friendList_name__17BVU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"transactionHistory_transaction_history__3iX7M\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './profile.module.css';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => (\n  <div className={styles.profile}>\n    <div className={styles.description}>\n      <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tag}>@{tag}</p>\n      <p className={styles.location}>{location}</p>\n    </div>\n\n    <ul className={styles.stats}>\n      <li>\n        <span className={styles.label}>Followers</span>\n        <span className={styles.quantity}>{stats.followers}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Views</span>\n        <span className={styles.quantity}>{stats.views}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Likes</span>\n        <span className={styles.quantity}>{stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './statistical.module.css';\n\nconst Statistics = ({ title, stats }) => (\n  <section className={styles.statistics}>\n    <h2 className={styles.title}>{title}</h2>\n\n    <ul className={styles.stat_list}>\n      {stats.map(stat => (\n        <li className={styles.item} key={stat.id}>\n          <span className={styles.label}>{stat.label}</span>\n          <span className={styles.percentage}>{stat.percentage}%</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.propTypes = {\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './friendList.module.css';\n\nconst FriendList = ({ friends }) => (\n  <ul className={styles.friend_list}>\n    {friends.map(friend => (\n      <li className={styles.item} key={friend.id}>\n        <span\n          className={\n            friend.isOnline ? styles.statusOnline : styles.statusOffline\n          }\n        ></span>\n        <img className={styles.avatar} src={friend.avatar} alt=\"\" width=\"48\" />\n        <p className={styles.name}>{friend.name}</p>\n      </li>\n    ))}\n  </ul>\n);\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './transactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table class={styles.transaction_history}>\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.map(item => (\n        <tr key={item.id}>\n          <td>{item.type}</td>\n          <td>{item.amount}</td>\n          <td>{item.currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  itemss: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport Profile from './Profile/Profile';\nimport user from './Profile/user.json';\nimport Statistics from './Statistics/Statistics';\nimport statisticalData from './Statistics/statistical-data.json';\nimport FriendList from './FriendList/FriendList';\nimport friends from './FriendList/friends.json';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport transactions from './TransactionHistory/transactions.json';\n\nconst App = () => (\n  <>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\n    <FriendList friends={friends} />\n    <TransactionHistory items={transactions} />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}